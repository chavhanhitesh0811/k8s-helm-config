autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

deployments:
  postgres:
    name: postgres-deployment
    label: postgres
    port: 5432
    repository: "postgres"
    tag: "14"
    replicaCount: 1
  demoAppBackend:
    name: demo-app-backend-deployment
    label: demo-app-backend
    port: 8080
    repository: "hiteshchavhan811/demo-app"
    tag: "latest"
    replicaCount: 2

services:
  postgres:
    name: postgres-service
    type: ClusterIP
    port: 5432
  demoAppBackend:
    name: demo-app-backend-service
    type: ClusterIP
    port: 8080

ingress:
  enabled: true
  name: application-ingress
  className: "nginx"
  annotations: {}
  hosts:
    - host: myapp.example.com
      paths:
        - path: /api/demo
          pathType: ImplementationSpecific

configMap:
  postgresConfig:
    name: postgres-config
    data:
      POSTGRES_DB: demo_db
  demoAppBackendConfig:
    name: demo-app-backend-config
    data:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-service:5432/demo_db

secret:
  postgresSecret:
    name: postgres-secret
    data:
      POSTGRES_USER: ZGVtb191c2Vy
      POSTGRES_PASSWORD: c2VjcmV0MTIz
  demoAppBackendSecret:
    name: demo-app-backend-secret
    data:
      SPRING_DATASOURCE_USERNAME: ZGVtb191c2Vy
      SPRING_DATASOURCE_PASSWORD: c2VjcmV0MTIz

volumes:
  postgres:
    - name: postgres-db-volume
      persistentVolumeClaim:
        claimName: postgres-pvc
  demoAppBackend:
    - name: shared-doc-volume
      persistentVolumeClaim:
        claimName: shared-doc-pvc

volumeMounts:
  postgres:
    - name: postgres-db-volume
      mountPath: /var/lib/postgresql/data
  demoAppBackend:
    - name: shared-doc-volume
      mountPath: /common-doc/

pvc:
  sharedDocPvc:
    name: shared-doc-pvc
    accessModes :
      - ReadWriteMany
    storage: 5Gi
  postgres-db-pvc:
    name: postgres-pvc
    accessModes:
      - ReadWriteOnce
    storage: 1Gi